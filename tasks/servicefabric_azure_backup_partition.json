{
	"description": "Creates a backup of the stateful persisted partition's state. In case the partition is already being periodically backed up, then by default the new backup is created at the same backup storage. One can also override the same by specifying the backup storage details as part of the request body. Once the backup is initiated, its progress can be tracked using the GetBackupProgress operation. In case, the operation times out, specify a greater backup timeout value in the query parameter.",
	"input_method": "stdin",
	"parameters":{
		
		
		
		
		    
			"partition_id":{
			   "description": "The identity of the partition.",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"backup_partition_description":{
			   "description": "Describes the parameters to backup the partition now. If not present, backup operation uses default parameters from the backup policy current associated with this partition.",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"backup_timeout":{
			   "description": "Specifies the maximum amount of time, in minutes, to wait for the backup operation to complete. Post that, the operation completes with timeout error. However, in certain corner cases it could be that though the operation returns back timeout, the backup actually goes through. In case of timeout error, its recommended to invoke this operation again with a greater timeout value. The default value for the same is 10 minutes.",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"api_version":{
			   "description": "The version of the API. This parameter is required and its value must be '6.4'.Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version.",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"timeout":{
			   "description": "The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"error":{
			   "description": "Error object containing error code and error message.",
			   "type": "Optional[String[1]]"
			}
			
	}
}