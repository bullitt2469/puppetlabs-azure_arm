{
	"description": "Gets the Activity Logs for the Tenant.Everything that is applicable to the API to get the Activity Logs for the subscription is applicable to this API (the parameters, $filter, etc.).One thing to point out here is that this API does *not* retrieve the logs at the individual subscription of the tenant but only surfaces the logs that were generated at the tenant level.",
	"input_method": "stdin",
	"parameters":{
		
		
		
		
		    
			"eventname":{
			   "description": "the event name. This value should not be confused with OperationName. For practical purposes, OperationName might be more appealing to end users.",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"api_version":{
			   "description": "Client Api Version.",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"resourceid":{
			   "description": "the resource uri that uniquely identifies the resource that caused this event.",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"authorization":{
			   "description": "The sender authorization information.",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"caller":{
			   "description": "the email address of the user who has performed the operation, the UPN claim or SPN claim based on availability.",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"correlationid":{
			   "description": "the correlation Id, usually a GUID in the string format. The correlation Id is shared among the events that belong to the same uber operation.",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"description":{
			   "description": "the description of the event.",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"resourceprovidername":{
			   "description": "the resource provider name of the impacted resource.",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"level":{
			   "description": "the event level",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"tenantid":{
			   "description": "the Azure tenant Id",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"resourcegroupname":{
			   "description": "the resource group name of the impacted resource.",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"substatus":{
			   "description": "the event sub status. Most of the time, when included, this captures the HTTP status code of the REST call. Common values are: OK (HTTP Status Code: 200), Created (HTTP Status Code: 201), Accepted (HTTP Status Code: 202), No Content (HTTP Status Code: 204), Bad Request(HTTP Status Code: 400), Not Found (HTTP Status Code: 404), Conflict (HTTP Status Code: 409), Internal Server Error (HTTP Status Code: 500), Service Unavailable (HTTP Status Code:503), Gateway Timeout (HTTP Status Code: 504)",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"status":{
			   "description": "a string describing the status of the operation. Some typical values are: Started, In progress, Succeeded, Failed, Resolved.",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"eventtimestamp":{
			   "description": "the timestamp of when the event was generated by the Azure service processing the request corresponding the event. It in ISO 8601 format.",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"category":{
			   "description": "the event category.",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"submissiontimestamp":{
			   "description": "the timestamp of when the event became available for querying via this API. It is in ISO 8601 format. This value should not be confused eventTimestamp. As there might be a delay between the occurrence time of the event, and the time that the event is submitted to the Azure logging infrastructure.",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"filter":{
			   "description": "Reduces the set of data collected. The **$filter** is very restricted and allows only the following patterns.- List events for a resource group: $filter=eventTimestamp ge '' and eventTimestamp le '' and eventChannels eq 'Admin, Operation' and resourceGroupName eq ''.- List events for resource: $filter=eventTimestamp ge '' and eventTimestamp le '' and eventChannels eq 'Admin, Operation' and resourceUri eq ''.- List events for a subscription: $filter=eventTimestamp ge '' and eventTimestamp le '' and eventChannels eq 'Admin, Operation'.- List events for a resource provider: $filter=eventTimestamp ge '' and eventTimestamp le '' and eventChannels eq 'Admin, Operation' and resourceProvider eq ''.- List events for a correlation Id: api-version=2014-04-01&$filter=eventTimestamp ge '2014-07-16T04:36:37.6407898Z' and eventTimestamp le '2014-07-20T04:36:37.6407898Z' and eventChannels eq 'Admin, Operation' and correlationId eq ''.**NOTE**: No other syntax is allowed.",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"select":{
			   "description": "Used to fetch events with only the given properties.The **$select** argument is a comma separated list of property names to be returned. Possible values are: *authorization*, *claims*, *correlationId*, *description*, *eventDataId*, *eventName*, *eventTimestamp*, *httpRequest*, *level*, *operationId*, *operationName*, *properties*, *resourceGroupName*, *resourceProviderName*, *resourceId*, *status*, *submissionTimestamp*, *subStatus*, *subscriptionId*",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"eventdataid":{
			   "description": "the event data Id. This is a unique identifier for an event.",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"operationid":{
			   "description": "It is usually a GUID shared among the events corresponding to single operation. This value should not be confused with EventName.",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"subscriptionid":{
			   "description": "the Azure subscription Id usually a GUID.",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"id":{
			   "description": "the Id of this event as required by ARM for RBAC. It contains the EventDataID and a timestamp information.",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"operationname":{
			   "description": "the operation name.",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"properties":{
			   "description": "the set of  pairs (usually a Dictionary) that includes details about the event.",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"resourcetype":{
			   "description": "the resource type",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"httprequest":{
			   "description": "the HTTP request info. Usually includes the 'clientRequestId', 'clientIpAddress' (IP address of the user who initiated the event) and 'method' (HTTP method e.g. PUT).",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"claims":{
			   "description": "key value pairs to identify ARM permissions.",
			   "type": "Optional[String[1]]"
			}
			
	}
}