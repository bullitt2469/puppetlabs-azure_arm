{
	"description": "Gets the health information of the specified service.If the application health policy is specified, the health evaluation uses it to get the aggregated health state.If the policy is not specified, the health evaluation uses the application health policy defined in the application manifest, or the default health policy, if no policy is defined in the manifest.Use EventsHealthStateFilter to filter the collection of health events reported on the service based on the health state.Use PartitionsHealthStateFilter to filter the collection of partitions returned.If you specify a service that does not exist in the health store, this request returns an error.",
	"input_method": "stdin",
	"parameters":{
		
		
		
		
		    
			"api_version":{
			   "description": "The version of the API. This parameter is required and its value must be '6.0'.Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.Additionally the runtime accept any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0, but if the runtime is 6.1, in order to make it easier to write the clients, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version.",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"service_id":{
			   "description": "The identity of the service. This ID is typically the full name of the service without the 'fabric:' URI scheme.Starting from version 6.0, hierarchical names are delimited with the '~' character.For example, if the service name is 'fabric:/myapp/app1/svc1', the service identity would be 'myapp~app1~svc1' in 6.0+ and 'myapp/app1/svc1' in previous versions.",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"events_health_state_filter":{
			   "description": "Allows filtering the collection of HealthEvent objects returned based on health state.The possible values for this parameter include integer value of one of the following health states.Only events that match the filter are returned. All events are used to evaluate the aggregated health state.If not specified, all entries are returned. The state values are flag-based enumeration, so the value could be a combination of these values, obtained using the bitwise 'OR' operator. For example, If the provided value is 6 then all of the events with HealthState value of OK (2) and Warning (4) are returned.- Default - Default value. Matches any HealthState. The value is zero.- None - Filter that doesn't match any HealthState value. Used in order to return no results on a given collection of states. The value is 1.- Ok - Filter that matches input with HealthState value Ok. The value is 2.- Warning - Filter that matches input with HealthState value Warning. The value is 4.- Error - Filter that matches input with HealthState value Error. The value is 8.- All - Filter that matches input with any HealthState value. The value is 65535.",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"partitions_health_state_filter":{
			   "description": "Allows filtering of the partitions health state objects returned in the result of service health query based on their health state.The possible values for this parameter include integer value of one of the following health states.Only partitions that match the filter are returned. All partitions are used to evaluate the aggregated health state.If not specified, all entries are returned. The state values are flag-based enumeration, so the value could be a combination of these valueobtained using bitwise 'OR' operator. For example, if the provided value is 6 then health state of partitions with HealthState value of OK (2) and Warning (4) will be returned.- Default - Default value. Matches any HealthState. The value is zero.- None - Filter that doesn't match any HealthState value. Used in order to return no results on a given collection of states. The value is 1.- Ok - Filter that matches input with HealthState value Ok. The value is 2.- Warning - Filter that matches input with HealthState value Warning. The value is 4.- Error - Filter that matches input with HealthState value Error. The value is 8.- All - Filter that matches input with any HealthState value. The value is 65535.",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"application_health_policy":{
			   "description": "Describes the health policies used to evaluate the health of an application or one of its children.If not present, the health evaluation uses the health policy from application manifest or the default health policy.",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"exclude_health_statistics":{
			   "description": "Indicates whether the health statistics should be returned as part of the query result. False by default.The statistics show the number of children entities in health state Ok, Warning, and Error.",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"timeout":{
			   "description": "The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"error":{
			   "description": "Error object containing error code and error message.",
			   "type": "Optional[String[1]]"
			}
			
	}
}